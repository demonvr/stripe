variables:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

  TAG_STAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:stage
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

#stages:
#    - build
#    - test
#    - deploy
#
#build:
#  image: docker/compose:latest
#  stage: build
#  services:
#    - docker:dind
#  tags:
#    - deployment
#  variables:
#    POSTGRES_DB: $DB_NAME
#    POSTGRES_USER: $DB_USER
#    POSTGRES_PASSWORD: $DB_PASSWORD
#  before_script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
##    - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin
#    - cp .env.sample .env
#  script:
#    - docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
#    - docker-compose push web
#
#test:
#  image: docker/compose:latest
#  stage: test
#  services:
#    - docker:dind
#  tags:
#    - deployment
#  before_script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - cp .env.sample .env
#  script:
#    - docker-compose pull test
#    - docker-compose run test

stages:
  - deploy

deploy:
  image: docker/compose:latest
  stage: deploy
  services:
    - docker:dind
  tags:
    - deployment
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cp .env.sample .env
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - cat "$ID_RSA" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cat <<< "${HOST_KEY}" > ~/.ssh/known_hosts
  script:
    - docker-compose --skip-hostname-check -H "ssh://$SERVER_USER@$SERVER_IP"  pull web
    - docker container rm -f web || true
    - docker-compose -H "ssh://$SERVER_USER@$SERVER_IP" --skip-hostname-check  run web


#docker container rm -f my-app || true

#deploy:
#  image: alpine:latest
#  stage: deploy
#  tags:
#    - deployment
#  script:
#    - chmod og= $ID_RSA
#    - apk update && apk add openssh-client
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull web"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f web"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose up -d"
#  environment:
#    name: production
#    url: http://your_server_IP
#  only:
#    - master